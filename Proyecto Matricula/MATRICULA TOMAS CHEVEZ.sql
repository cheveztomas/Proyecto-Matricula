CREATE DATABASE MATRICULA_TOMAS_CHEVEZ

GO --INICIA UN NUEVO LOTE

--SE UTILIZA PARA USAR UNA BASE DE DATOS
USE MATRICULA_TOMAS_CHEVEZ

GO
--""--------------------------------------------------------------------------------------------------""
--| ""LOS PROCEDIMIENTOS ALMACENADOS SE ENCUENTRAN EN ESTE MISMO SCRIPT PARA, FACILITAR LA REVISION."" |
--""--------------------------------------------------------------------------------------------------""
--DROP DATABASE MATRICULA_TOMAS_CHEVEZ
--CREACIÓN DE TABLAS
CREATE TABLE CARRERAS
(
	COD_CARRERA INT NOT NULL IDENTITY(1,1),
	NOMBRE_CARRERA VARCHAR(100) NOT NULL,
	TOTAL_CREDITOS SMALLINT NOT NULL,
	GRADO VARCHAR(14) NOT NULL,
	ACREDITADA BIT NOT NULL
)

--DROP TABLE CARRERAS

ALTER TABLE CARRERAS ADD DEFAULT 'BACHILLERATO' FOR GRADO
ALTER TABLE CARRERAS ADD DEFAULT 0 FOR ACREDITADA

ALTER TABLE CARRERAS
	ADD CONSTRAINT CHK_TOTAL_CREDITOS
		CHECK (TOTAL_CREDITOS>=0 AND TOTAL_CREDITOS<1000)

ALTER TABLE CARRERAS
	ADD CONSTRAINT CHK_GRADO_CARRERA
		CHECK (GRADO IN ('BACHILLERATO','DIPLOMADO','LICENCIATURA','MAESTRIA','DOCTORADO'))

ALTER TABLE CARRERAS
	ADD CONSTRAINT PK_CARRERAS
		PRIMARY KEY (COD_CARRERA)

CREATE TABLE MATERIAS
(
	COD_MATERIA VARCHAR(10) CONSTRAINT PK_MATERIAS PRIMARY KEY,
	NOMBRE_MATERIA VARCHAR(120) NOT NULL,
	CREDITOS INT CONSTRAINT CHK_CREDITOS CHECK (CREDITOS>=0 AND CREDITOS<10),
	BORRADO BIT DEFAULT 0
)

CREATE TABLE MATERIAS_CARRERAS
(
	COD_MATERIACARRERA INT IDENTITY,
	COD_CARRERA INT NOT NULL,
	COD_MATERIA VARCHAR(10) NOT NULL,
	REQUISITO VARCHAR(10),
	COREQUISITO VARCHAR(10),
	BORRADO BIT DEFAULT 0
	CONSTRAINT PK_COD_MATERIA_CARRERA
		PRIMARY KEY (COD_MATERIACARRERA)
)

ALTER TABLE MATERIAS_CARRERAS
	ADD CONSTRAINT FK_MATERIAS_CARRERA1
		FOREIGN KEY (COD_CARRERA) REFERENCES CARRERAS(COD_CARRERA)

ALTER TABLE MATERIAS_CARRERAS
	ADD CONSTRAINT FK_MATERIAS_CARRERA2
		FOREIGN KEY (COD_MATERIA) REFERENCES MATERIAS(COD_MATERIA)

ALTER TABLE MATERIAS_CARRERAS
	ADD CONSTRAINT FK_MATERIAS_CARRERA3
		FOREIGN KEY (REQUISITO) REFERENCES MATERIAS(COD_MATERIA)

ALTER TABLE MATERIAS_CARRERAS
	ADD CONSTRAINT FK_MATERIAS_CARRERA4
		FOREIGN KEY (COREQUISITO) REFERENCES MATERIAS(COD_MATERIA)


CREATE TABLE ESTUDIANTES
(
	CARNET CHAR(6) NOT NULL,
	ID_ESTUDIANTE VARCHAR(20) UNIQUE NOT NULL,
	NOMBRE_ESTUDIANTE VARCHAR(25) NOT NULL,
	PRIMER_APELLIDO_E VARCHAR(20) NOT NULL,
	SEGUNDO_APELLIDO_E VARCHAR(20) NOT NULL,
	TELEFONO_ESTUDIANTE VARCHAR(8) NOT NULL,
	CORREO_ESTUDIANTE VARCHAR(25) NOT NULL,
	PROVINCIA_ESTUDIANTE VARCHAR(12) NOT NULL,
	CANTON_ESTUDIANTE VARCHAR(20),
	DISTRITO_ESTUDIANTE VARCHAR(25),
	OTRAS_SENIAS VARCHAR(80),
	NACIONALIDAD VARCHAR(25) NOT NULL,
	FECHA_NACIMIENTO DATETIME NOT NULL,
	FECHA_INGRESO DATETIME NOT NULL,
	ESTADO VARCHAR(3) NOT NULL,
	BORRADO BIT NOT NULL
	CONSTRAINT PK_CARNET
		PRIMARY KEY (CARNET)
)
ALTER TABLE ESTUDIANTES
	ALTER COLUMN CORREO_ESTUDIANTE VARCHAR(20) NULL

ALTER TABLE ESTUDIANTES
	ADD CONSTRAINT CHK_PROVINCIAS_ESTUDIANTES
		CHECK (PROVINCIA_ESTUDIANTE IN ('ALAJUELA', 'SAN JOSE', 'HEREDIA', 'CARTAGO', 'PUNTARENAS', 'LIMON', 'GUANACASTE'))

/*ALTER TABLE ESTUDIANTES
	ADD CONSTRAINT CHK_FECHA_INGRESO
		CHECK (FECHA_INGRESO>=GETDATE())*/

ALTER TABLE ESTUDIANTES
	ADD CONSTRAINT CHK_ESTADO_E
		CHECK (ESTADO IN ('INA', 'ACT'))

ALTER TABLE ESTUDIANTES
	ADD DEFAULT 'ALAJUELA'
		FOR PROVINCIA_ESTUDIANTE

ALTER TABLE ESTUDIANTES
	ADD DEFAULT 'COSTARRICENSE'
		FOR NACIONALIDAD

ALTER TABLE ESTUDIANTES
	ADD DEFAULT 'ACT'
		FOR ESTADO

ALTER TABLE ESTUDIANTES
	ADD DEFAULT 0
		FOR BORRADO

CREATE TABLE PROFESORES
(
	COD_PROFESOR INT IDENTITY(1,1),
	ID_PROFESOR VARCHAR(15) UNIQUE NOT NULL,
	NOMBRE_PROFESOR VARCHAR(25) NOT NULL,
	PRIMER_APELLIDO_P VARCHAR(20) NOT NULL,
	SEGUNDO_APELLIDO_P VARCHAR(20),
	TELEFONO_PROFESOR VARCHAR(8),
	CORREO_PROFESOR VARCHAR(25),
	BORRADO BIT
	CONSTRAINT PK_COD_PROFESOR
		PRIMARY KEY (COD_PROFESOR)
)

ALTER TABLE PROFESORES
	ADD DEFAULT 0
		FOR BORRADO

/*CREATE TABLE SEDES
(
	COD_SEDE INT IDENTITY(1,1) NOT NULL,
	NOMBRE_SEDE VARCHAR(25) NOT NULL,
	UBICACION_SEDE VARCHAR(25) NOT NULL,
	TELEFONO1_SEDE VARCHAR(8) NOT NULL,
	TELEFONO2_SEDE VARCHAR(8),
	CORREO_SEDE VARCHAR(25) NOT NULL,
	CONSTRAINT PK_COD_SEDE
		PRIMARY KEY (COD_SEDE)
)

CREATE TABLE CARRERAS_SEDES
(
	COD_SEDE INT NOT NULL,
	COD_CARRERA INT NOT NULL,
)

ALTER TABLE CARRERAS_SEDES
	ADD CONSTRAINT FK1_CARRERAS_SEDES
		FOREIGN KEY (COD_SEDE) REFERENCES SEDES (COD_SEDE)

ALTER TABLE CARRERAS_SEDES
	ADD CONSTRAINT FK2_CARRERAS_SEDES
		FOREIGN KEY (COD_CARRERA) REFERENCES CARRERAS(COD_CARRERA)

ALTER TABLE CARRERAS_SEDES
	ADD CONSTRAINT PK_CARRERAS_SEDES
		PRIMARY KEY CLUSTERED (COD_SEDE,COD_CARRERA)*/

CREATE TABLE INF_MATERIAS_ABIERTAS
(
COD_INF_MATERIA_ABIERTA INT IDENTITY CONSTRAINT PK_DETALLE_MATERIAS_ABIERTAS PRIMARY KEY NOT NULL,
PERIODO TINYINT NOT NULL,
FECHA_INICIO DATE NOT NULL,
FECHA_FIN DATE NOT NULL,
)
/*ALTER TABLE INF_MATERIAS_ABIERTAS
	ADD CONSTRAINT CHK_ANIO_INF_MATERIA_ABIERTA
		CHECK (ANIO>=YEAR(GETDATE()))*/

CREATE TABLE MATERIA_ABIERTA
(
	COD_MATERIA_ABIERTA INT IDENTITY(1,1) NOT NULL,
	COD_MATERIA_CARRERA INT NOT NULL,
	COD_PROFESOR INT,
	COD_INF_MATERIA_ABIERTA INT NOT NULL,
	GRUPO TINYINT NOT NULL,
	CUPO TINYINT NOT NULL,
	CUPO_MINIMO TINYINT NOT NULL,
	COSTO DECIMAL(10,2) NOT NULL,
	MAXIMO_DESCUENTO DECIMAL(4,2)
	CONSTRAINT PK_MATERIA_ABIERTA
		PRIMARY KEY (COD_MATERIA_ABIERTA)
)

ALTER TABLE MATERIA_ABIERTA
	ADD CONSTRAINT CHK_COSTO_MATERIA_CARRERA
		CHECK (COSTO>=0)


ALTER TABLE MATERIA_ABIERTA
	ADD CONSTRAINT CHK_MAXIMO_DESCUENTO
		CHECK (MAXIMO_DESCUENTO>=0 AND MAXIMO_DESCUENTO<=100)

ALTER TABLE MATERIA_ABIERTA
	ADD CONSTRAINT FK1_MATERIA_ABIERTA
		FOREIGN KEY(COD_MATERIA_CARRERA) REFERENCES MATERIAS_CARRERAS(COD_MATERIACARRERA)

ALTER TABLE MATERIA_ABIERTA
	ADD CONSTRAINT FK2_MATERIA_ABIERTA
		FOREIGN KEY (COD_PROFESOR) REFERENCES PROFESORES(COD_PROFESOR)

ALTER TABLE MATERIA_ABIERTA
	ADD CONSTRAINT FK3_MATERIA_ABIERTA
		FOREIGN KEY (COD_INF_MATERIA_ABIERTA) REFERENCES INF_MATERIAS_ABIERTAS(COD_INF_MATERIA_ABIERTA)

CREATE TABLE HORARIOS
(
	COD_MATERIA_ABIERTA INT NOT NULL,
	DIA CHAR NOT NULL,
	HORA_INICIO DATETIME NOT NULL,
	HORA_FIN DATETIME NOT NULL,
)

ALTER TABLE HORARIOS
	ADD CONSTRAINT FK1_HORARIOS
		FOREIGN KEY (COD_MATERIA_ABIERTA) REFERENCES MATERIA_ABIERTA(COD_MATERIA_ABIERTA)

ALTER TABLE HORARIOS
	ADD CONSTRAINT PK_HORARIOS_COMPUESTA
		PRIMARY KEY CLUSTERED(COD_MATERIA_ABIERTA, DIA, HORA_INICIO, HORA_FIN)

ALTER TABLE HORARIOS
	ADD CONSTRAINT CHK_DIA_HORARIOS
		CHECK (DIA IN ('L','K','M','J','V','S'))

CREATE TABLE MATRICULA
(
	NUM_RECIBO INT IDENTITY(1,1) NOT NULL,
	CARNET CHAR(6) NOT NULL,
	FECHA DATETIME NOT NULL,
	MONTO DECIMAL(10,2) NOT NULL,
	DESCUENTO DECIMAL(10,2),
	ESTADO CHAR(3) NOT NULL
	CONSTRAINT PK_NUM_RECIBO_MATRICULA
		PRIMARY KEY(NUM_RECIBO)
)

ALTER TABLE MATRICULA
	ADD CONSTRAINT FK1_MATRICULA
		FOREIGN KEY (CARNET) REFERENCES ESTUDIANTES(CARNET)

ALTER TABLE MATRICULA
	ADD CONSTRAINT CHK_MONTO_MATRICULA
		CHECK (MONTO>0)

ALTER TABLE MATRICULA
	ADD CONSTRAINT CHK_DESCUENTO_MATRICULA
		CHECK(DESCUENTO>=0)

ALTER TABLE MATRICULA
	ADD CONSTRAINT CHK_ESTADO_MATRICULA
		CHECK(ESTADO IN ('ACT', 'INA'))

ALTER TABLE MATRICULA
	ADD DEFAULT (GETDATE())
		FOR FECHA

ALTER TABLE MATRICULA
	ADD DEFAULT 'ACT'
		FOR ESTADO

CREATE TABLE DETALLE_MATRICULA
(
	NUM_RECIBO INT NOT NULL,
	COD_MATERIA_ABIERTA INT NOT NULL,
	PORCENTAJE_DESCUENTO DECIMAL(4,2),
	NOTA_FINAL DECIMAL (5,2),
	ESTADO CHAR(3) NOT NULL,
	OBSERVACIONES VARCHAR(500),
	CONSTRAINT PK_DETALLES_MATRICULA_COMPUESTA
		PRIMARY KEY CLUSTERED (NUM_RECIBO,COD_MATERIA_ABIERTA)
)

ALTER TABLE DETALLE_MATRICULA
	ADD CONSTRAINT FK1_DETALLE_MATRICULA
		FOREIGN KEY (NUM_RECIBO) REFERENCES MATRICULA(NUM_RECIBO)

ALTER TABLE DETALLE_MATRICULA
	ADD CONSTRAINT FK2_DETALLE_MATRICULA
		FOREIGN KEY (COD_MATERIA_ABIERTA) REFERENCES MATERIA_ABIERTA(COD_MATERIA_ABIERTA)

ALTER TABLE DETALLE_MATRICULA
	ADD CONSTRAINT CHK_PORCENTAJE_DESCUENTO
		CHECK(PORCENTAJE_DESCUENTO>0 AND PORCENTAJE_DESCUENTO<100)

ALTER TABLE DETALLE_MATRICULA
	ADD CONSTRAINT CHK_NOTA_FINAL
		CHECK (NOTA_FINAL IS NULL OR (NOTA_FINAL>0 AND NOTA_FINAL<100))

ALTER TABLE DETALLE_MATRICULA
	ADD CONSTRAINT CHK_ESTADO
		CHECK (ESTADO IN('ACT','RET','APR','REP'))

ALTER TABLE DETALLE_MATRICULA
	ADD DEFAULT 0
		FOR PORCENTAJE_DESCUENTO

ALTER TABLE DETALLE_MATRICULA
	ADD DEFAULT 0
		FOR NOTA_FINAL

ALTER TABLE DETALLE_MATRICULA
	ADD DEFAULT 'ACT'
		FOR ESTADO

--DROP TABLE DETALLE_MATRICULA


--PROCESOS ALAMCENADOS 

GO

CREATE PROCEDURE SP_AGREGAR_ACTUALIZAR_CARRERA(@Cod_Carrera int,
											   @Nombre_Carrera varchar(100),
											   @Total_Creditos smallint,
											   @Grado varchar(14),
											   @Acreditada bit)
AS
BEGIN TRY
	BEGIN TRAN
		IF(EXISTS(SELECT 1 FROM CARRERAS WHERE COD_CARRERA=@Cod_Carrera))
			BEGIN
				UPDATE CARRERAS
				SET 
					NOMBRE_CARRERA=@Nombre_Carrera,
					TOTAL_CREDITOS=@Total_Creditos,
					GRADO=@Grado,
					ACREDITADA=@Acreditada
				WHERE COD_CARRERA=@Cod_Carrera
			END
		ELSE
			BEGIN
				INSERT CARRERAS(NOMBRE_CARRERA, TOTAL_CREDITOS, GRADO, ACREDITADA)
				VALUES(@Nombre_Carrera, @Total_Creditos, @Grado, @Acreditada);
			END
	COMMIT TRAN
END TRY

BEGIN CATCH
	THROW
END CATCH

GO
/*
USE [MATRICULA_TOMAS_CHEVEZ]
GO

DECLARE @RC int
DECLARE @Cod_Carrera int=1
DECLARE @Nombre_Carrera varchar(100)='ENSEÑANZA DE LA MATEMATICA'
DECLARE @Total_Creditos smallint='175'
DECLARE @Grado varchar(14)='BACHILLERATO'
DECLARE @Acreditada bit='1'

-- TODO: Set parameter values here.

EXECUTE @RC = [dbo].[SP_AGREGAR_ACTUALIZAR_CARRERA] 
   @Cod_Carrera
  ,@Nombre_Carrera
  ,@Total_Creditos
  ,@Grado
  ,@Acreditada

  SELECT *FROM  CARRERAS
GO
*/

CREATE PROCEDURE SP_AGREGAR_PROFESOR(@Id_Profesor varchar (15),
									 @Nombre_Profesor varchar(25),
									 @Primer_Apellido_P varchar(20),
									 @Segundo_Apellido_P varchar(20),
									 @Telefono_Profesor varchar(8),
									 @Correo_Profesor varchar(25),
									 @Borrado bit)
AS
BEGIN TRY
	BEGIN TRAN
		IF(EXISTS (SELECT 1 FROM PROFESORES WHERE ID_PROFESOR=@Id_Profesor))
			BEGIN
				UPDATE PROFESORES
				SET ID_PROFESOR=@Id_Profesor,
					NOMBRE_PROFESOR=@Nombre_Profesor,
					PRIMER_APELLIDO_P=@PRIMER_APELLIDO_P,
					SEGUNDO_APELLIDO_P=@SEGUNDO_APELLIDO_P,
					TELEFONO_PROFESOR=@TELEFONO_PROFESOR,
					CORREO_PROFESOR=@CORREO_PROFESOR,
					BORRADO=@BORRADO
				WHERE ID_PROFESOR=@ID_PROFESOR
			END
		ELSE
			BEGIN
				INSERT PROFESORES(ID_PROFESOR, NOMBRE_PROFESOR, PRIMER_APELLIDO_P, SEGUNDO_APELLIDO_P, TELEFONO_PROFESOR, CORREO_PROFESOR, BORRADO)
				VALUES (@ID_PROFESOR, @NOMBRE_PROFESOR, @PRIMER_APELLIDO_P, @SEGUNDO_APELLIDO_P, @TELEFONO_PROFESOR, @CORREO_PROFESOR, @BORRADO)
			END
	COMMIT TRAN
END TRY

BEGIN catch
	throw 
end catch         

/*
USE [MATRICULA_TOMAS_CHEVEZ]
GO

DECLARE @RC int
DECLARE @Id_Profesor varchar(15)='207420846'
DECLARE @Nombre_Profesor varchar(25)='Tomas'
DECLARE @Primer_Apellido_P varchar(20)='Chevez'
DECLARE @Segundo_Apellido_P varchar(20)='Elizondo'
DECLARE @Telefono_Profesor varchar(8)='89677620'
DECLARE @Correo_Profesor varchar(25)='kghsdsdhj'
DECLARE @Borrado bit

-- TODO: Set parameter values here.

EXECUTE @RC = [dbo].[SP_AGREGAR_PROFESOR] 
   @Id_Profesor
  ,@Nombre_Profesor
  ,@Primer_Apellido_P
  ,@Segundo_Apellido_P
  ,@Telefono_Profesor
  ,@Correo_Profesor
  ,@Borrado
GO
*/
GO

CREATE PROCEDURE SP_AGREGAR_ACTUALIZAR_MATERIA(@Cod_Materia varchar(10),
											   @NombreMateria varchar(120),
											   @Creditos int,
											   @Borrado bit,
											   @Cod_Carrera int)
AS
BEGIN TRY
	BEGIN TRAN
		IF(EXISTS(SELECT 1 FROM MATERIAS WHERE COD_MATERIA=@Cod_Materia))
			BEGIN
				UPDATE MATERIAS
				SET 
					NOMBRE_MATERIA=@NombreMateria,
					CREDITOS=@Creditos,
					BORRADO=@Borrado
				WHERE COD_MATERIA=@Cod_Materia;
			END
		ELSE
			BEGIN
				INSERT INTO MATERIAS(COD_MATERIA, NOMBRE_MATERIA, CREDITOS, BORRADO)
				VALUES(@Cod_Materia, @NombreMateria, @Creditos, @Borrado)

				INSERT INTO MATERIAS_CARRERAS(COD_CARRERA, COD_MATERIA)
				VALUES (@Cod_Carrera, @Cod_Materia)
			END
	COMMIT TRAN
END TRY

BEGIN CATCH
	THROW
END CATCH
GO
/*
USE [MATRICULA_TOMAS_CHEVEZ]
GO

DECLARE @RC int
DECLARE @Cod_Materia varchar(10)='MA-0123'
DECLARE @NombreMateria varchar(120)='MATEMATICA ELEMENTAL'
DECLARE @Creditos tinyint='4'
DECLARE @Borrado bit='0'
DECLARE @Cod_Carrera int='1'

-- TODO: Set parameter values here.

EXECUTE @RC = [dbo].[SP_AGREGAR_ACTUALIZAR_MATERIA] 
   @Cod_Materia
  ,@NombreMateria
  ,@Creditos
  ,@Borrado
  ,@Cod_Carrera
GO
SELECT * FROM MATERIAS_CARRERAS
SELECT * FROM MATERIAS
*/

CREATE PROCEDURE SP_ELIMINAR_MATERIA(@Cod_Materia varchar(10))
AS
BEGIN TRY
	BEGIN TRAN
		IF(EXISTS(SELECT 1 FROM MATERIAS_CARRERAS WHERE COD_MATERIA=@Cod_Materia))
			BEGIN
				UPDATE MATERIAS
				SET BORRADO=1
				WHERE COD_MATERIA=@Cod_Materia
			END
		ELSE
			BEGIN
				DELETE MATERIAS WHERE COD_MATERIA=@Cod_Materia
			END
	COMMIT TRAN
END TRY
BEGIN CATCH

END CATCH
GO
/*
USE [MATRICULA_TOMAS_CHEVEZ]
GO

DECLARE @RC int
DECLARE @Cod_Materia varchar(10)='MA-0123'

-- TODO: Set parameter values here.

EXECUTE @RC = [dbo].[SP_ELIMINAR_MATERIA] 
   @Cod_Materia
GO
*/
/*
CREATE PROCEDURE SP_AGREGAR_MATRICULA(@Num_Recibo int,
									  @Carnet char(6),
									  @Monto decimal(10,2),
									  @Descuento decimal(10,2),
									  @Cod_Materria_Abierta int,
									  @msj varchar(150) out)
AS
DECLARE @EXISTE_CHOQUE BIT
BEGIN TRY
	BEGIN TRAN
		IF(EXISTS(SELECT 1 FROM ESTUDIANTES WHERE CARNET=@Carnet AND BORRADO=0))
			BEGIN
				IF(EXISTS(SELECT 1 FROM ESTUDIANTES WHERE CARNET=@Carnet))
					BEGIN
						UPDATE ESTUDIANTES SET ESTADO='ACT' WHERE CARNET =@Carnet
					END

				EXEC @EXISTE_CHOQUE=SP_VERIFICAR_CHOQUE @Cod_Materria_Abierta, @Carnet

			END
	COMMIT TRAN
END TRY

BEGIN CATCH

END CATCH*/